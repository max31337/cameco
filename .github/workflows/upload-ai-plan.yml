name: Upload AI Plan to GitHub Issue

on:
  push:
    paths:
      - '.aiplans/**'
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  attach-plan:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
      pull-requests: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Extract issue number from branch
        id: extract
        run: |
          # Extract issue number from branch name (e.g., feature/issue-42 -> 42)
          BRANCH="${{ github.head_ref }}"
          ISSUE=$(echo "$BRANCH" | grep -oE '[0-9]+' | head -1)
          
          if [ -z "$ISSUE" ]; then
            echo "⚠️  No issue number found in branch name: $BRANCH"
            echo "issue_found=false" >> $GITHUB_OUTPUT
          else
            echo "✅ Found issue number: $ISSUE"
            echo "issue_number=$ISSUE" >> $GITHUB_OUTPUT
            echo "issue_found=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Issue if Missing & Post Plan
        if: steps.extract.outputs.issue_found == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE=${{ steps.extract.outputs.issue_number }}
          PLAN_FILE=".aiplans/ISSUE-$ISSUE.md"
          
          if [ ! -f "$PLAN_FILE" ]; then
            echo "⚠️  Plan file not found: $PLAN_FILE"
            exit 0
          fi
          
          # Try to get the issue title from the plan file (first line after # ISSUE-x - )
          TITLE=$(head -1 "$PLAN_FILE" | sed -E 's/^# ISSUE-[0-9]+ - //')
          BODY="This issue was auto-created by the AI plan sync workflow.\n\nSee the attached plan for details."
          
          # Check if the issue exists
          if ! gh issue view $ISSUE > /dev/null 2>&1; then
            echo "Issue #$ISSUE does not exist. Creating..."
            gh issue create --title "$TITLE" --body "$BODY" --label "ai-plan" --repo "$GITHUB_REPOSITORY"
            echo "✅ Created issue #$ISSUE"
          else
            echo "Issue #$ISSUE already exists."
          fi
          
          # Prepare comment
          if [ "${{ github.event.action }}" == "closed" ]; then
            HEADER="## 🎯 AI Feature Plan - Completed"
          else
            HEADER="## 📋 AI Feature Plan - In Progress"
          fi
          {
            echo "$HEADER"
            echo
            echo "This plan was automatically generated and tracked during development."
            echo
            echo "---"
            echo
            cat "$PLAN_FILE"
            echo
            echo "---"
            echo
            echo "_Auto-posted by GitHub Actions from \`.aiplans/ISSUE-$ISSUE.md\`_"
          } > comment.txt
          
          # Post comment to issue
          gh issue comment $ISSUE --body-file comment.txt
          
          echo "✅ Posted plan to issue #$ISSUE"
      
      - name: Archive plan on merge
        if: steps.extract.outputs.issue_found == 'true' && github.event.pull_request.merged == true
        run: |
          ISSUE=${{ steps.extract.outputs.issue_number }}
          PLAN_FILE=".aiplans/ISSUE-$ISSUE.md"
          ARCHIVE_DIR=".aiplans/archive"
          
          if [ -f "$PLAN_FILE" ]; then
            mkdir -p "$ARCHIVE_DIR"
            mv "$PLAN_FILE" "$ARCHIVE_DIR/ISSUE-$ISSUE-$(date +%Y%m%d).md"
            echo "📦 Archived plan to $ARCHIVE_DIR"
          fi
